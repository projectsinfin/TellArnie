{
  "openapi": "3.0.0",
  "info": {
    "title": "Reliance Medical API",
    "version": "1.0.0",
    "description": "API documentation for Reliance Medical API"
  },

  "tags": [
    {
      "name": "User",
      "description": "api's which is used by User"
    },
    {
      "name": "Admin",
      "description": "api's which is used by Admin"
    },
    {
      "name": "Company",
      "description": "common routes used by both admin and user"
    },
    {
      "name": "Distributor",
      "description": "api's which is used by Distributor"
    }
  ],

  "paths": {
    "/user/signup": {
      "post": {
        "tags": ["User"],
        "summary": "signup user",
        "description": "api for register user",
        "parameters": [
          {
            "name": "first_name",
            "in": "body",
            "description": "first name of the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "last_name",
            "in": "body",
            "description": "last name of the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email",
            "in": "body",
            "description": "email of the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "employee_id",
            "in": "body",
            "description": "Employee id of the user",
            "required": false,
            "schema": {
              "type": "string"
            }
          },

          {
            "name": "job_title",
            "in": "body",
            "description": "Job title of the user",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contact_number",
            "in": "body",
            "description": "phone number of the user mobile without country code",
            "required": true,
            "schema": {
              "type": "Number"
            }
          },
          {
            "name": "country_code",
            "in": "body",
            "description": "country code",
            "required": true,
            "schema": {
              "type": "Number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully registered the user"
          },
          "401": {
            "description": "User validation error"
          }
        }
      }
    },

    "/user/login": {
      "post": {
        "tags": ["User"],
        "summary": "login user",
        "description": "api for login user",
        "parameters": [
          {
            "name": "email",
            "in": "body",
            "description": "email of the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },

          {
            "name": "password",
            "in": "body",
            "description": "password of the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully login into the account"
          },
          "401": {
            "description": "Password do  not match"
          }
        }
      }
    },

    "/user/verify_otp": {
      "post": {
        "tags": ["User"],
        "summary": "verify Otp for account veriffication",
        "description": "api for account veriffication with otp on email",
        "parameters": [
          {
            "name": "user_id",
            "in": "body",
            "description": "user_id of the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },

          {
            "name": "otp",
            "in": "body",
            "description": "otp of the user",
            "required": true,
            "schema": {
              "type": "Number"
            }
          },
          {
            "name": "password",
            "in": "body",
            "description": "password of the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },

    "/company/register": {
      "post": {
        "tags": ["Company"],
        "summary": "verify mobile number",
        "description": "api for verifying mobile number",
        "parameters": [
          {
            "name": "user_id",
            "in": "body",
            "description": "user_id of the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },

          {
            "name": "otp",
            "in": "body",
            "description": "otp of the user",
            "required": true,
            "schema": {
              "type": "Number"
            }
          },
          {
            "name": "password",
            "in": "body",
            "description": "password of the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },

    "/user/my_account": {
      "get": {
        "tags": ["User"],
        "summary": "Get user account details",
        "description": "Endpoint to retrieve details of the authenticated user's account",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "user_details": {
                          "type": "object",
                          "properties": {
                            "first_name": { "type": "string" },
                            "last_name": { "type": "string" },
                            "email": { "type": "string" },
                            "contact_number": { "type": "number" },
                            "profile_pic": { "type": "string" },
                            "country_code": { "type": "number" },
                            "job_title": { "type": "string" },
                            "verified": { "type": "boolean" },
                            "assigned_role": { "type": "string" },
                            "employee_id": { "type": "string" },
                            "company_id": { "type": "string" },
                            "company_name": { "type": "string" }
                          }
                        }
                      }
                    },
                    "message": { "type": "string" },
                    "status": { "type": "number" }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "status": { "type": "number" }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "status": { "type": "number" }
                  }
                }
              }
            }
          }
        }
      }
    },

    "/user/update_profile": {
      "put": {
        "tags": ["User"],
        "summary": "Update user profile",
        "description": "Endpoint to update the profile of the authenticated user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "first_name": { "type": "string" },
                  "last_name": { "type": "string" },
                  "location": { "type": "string" },
                  "employee_id": { "type": "string" },
                  "job_title": { "type": "string" },
                  "assigned_role": { "type": "string" },
                  "is_firstaid_certified": { "type": "boolean" },
                  "firstaid_certificate_date": {
                    "type": "string",
                    "format": "date"
                  },
                  "contact_number": { "type": "number" },
                  "country_code": { "type": "number" },
                  "profile_pic": { "type": "string", "format": "binary" },
                  "firstaid_certificate": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated the profile",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "$ref": "#/components/schemas/User"
                        }
                      }
                    },
                    "message": { "type": "string" },
                    "status": { "type": "number" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "status": { "type": "number" }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "status": { "type": "number" }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "status": { "type": "number" }
                  }
                }
              }
            }
          }
        }
      }
    },
  
    "/user/is_verified": {
      "get": {
        "tags": ["User"],
        "summary": "Check user verification status",
        "description": "Endpoint to check the verification status of the authenticated user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "verified": { "type": "boolean" }
                      }
                    },
                    "message": { "type": "string" },
                    "status": { "type": "number" }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": { "type": "null" },
                    "message": { "type": "string" },
                    "status": { "type": "number" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/incident_categories": {
      "get": {
        "tags": ["IncidentCategories"],
        "summary": "Get incident categories",
        "description": "Endpoint to fetch all incident categories",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "Incidents": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": { "type": "string" },
                          "description": { "type": "string" }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/incidents": {
      "get": {
        "tags": ["Admin"],
        "summary": "Get list of incidents",
        "description": "Endpoint to fetch all incidents for admins",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "Incidents": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Incident"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/company/register_approver_officer": {
      "post": {
        "tags": ["Company"],
        "summary": "Register approval officer",
        "description": "Endpoint to register an approval officer for a company",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": { "type": "string" },
                  "first_name": { "type": "string" },
                  "last_name": { "type": "string" },
                  "contact_number": { "type": "string" },
                  "employee_id": { "type": "string" },
                  "job_title": { "type": "string" },
                  "country_code": { "type": "string" },
                  "company_id": { "type": "string" },
                  "user_id": { "type": "string" }
                },
                "required": ["email", "first_name", "last_name", "contact_number", "employee_id", "job_title", "country_code", "company_id", "user_id"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully registered approval officer",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "role": { "type": "string" }
                      }
                    },
                    "message": { "type": "string" },
                    "status": { "type": "number" }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": { "type": "null" },
                    "status": { "type": "number" },
                    "message": { "type": "string" }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": { "type": "null" },
                    "status": { "type": "number" },
                    "message": { "type": "string" }
                  }
                }
              }
            }
          }
        }
      }
    },

    "/admin/add_product": {
      "post": {
        "tags": ["Admin"],
        "summary": "Add a product",
        "description": "Endpoint to add a new product by admin",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "barcode": { "type": "string" },
                  "brand": { "type": "string" },
                  "description": { "type": "string" },
                  "quantity": { "type": "number" },
                  "lot_number": { "type": "string" },
                  "expiry_date": { "type": "string", "format": "date" },
                  "kit_id": { "type": "string" },
                  "product_picture": { "type": "string", "format": "binary" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully added product",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "product_id": { "type": "string" }
                      }
                    },
                    "message": { "type": "string" },
                    "status": { "type": "number" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "status": { "type": "number" }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": { "type": "null" },
                    "status": { "type": "number" },
                    "message": { "type": "string" }
                  }
                }
              }
            }
          }
        }
      }
    },

    "/admin/update_product/{productId}": {
      "post": {
        "tags": ["Admin"],
        "summary": "Update a product",
        "description": "Endpoint to update an existing product by admin",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "ID of the product to update",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "quantity": { "type": "number" },
                  "lot_number": { "type": "string" },
                  "expiry_date": { "type": "string", "format": "date" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated product",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "status": { "type": "boolean" },
                    "product": { "$ref": "#/components/schemas/Product" }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Product not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "status": { "type": "boolean" }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "status": { "type": "boolean" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/register_kit": {
      "post": {
        "tags": ["Admin"],
        "summary": "Register a kit",
        "description": "Endpoint to register a new kit by admin",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "qr_code": { "type": "string" },
                  "brand": { "type": "string" },
                  "model_number": { "type": "string" },
                  "batch_number": { "type": "string" },
                  "product_name": { "type": "string" },
                  "lot_number": { "type": "string" },
                  "expiry_date": { "type": "string", "format": "date" },
                  "kit_picture": { "type": "string", "format": "binary" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully registered kit",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "kit_id": { "type": "string" }
                      }
                    },
                    "message": { "type": "string" },
                    "status": { "type": "number" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "status": { "type": "number" }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": { "type": "null" },
                    "status": { "type": "number" },
                    "message": { "type": "string" }
                  }
                }
              }
            }
          }
        }
      }
    },

    "/admin/fetch_kit_details": {
      "get": {
        "tags": ["Admin"],
        "summary": "Fetch kit details",
        "description": "Endpoint to fetch details of a kit along with its related products",
        "parameters": [
          {
            "name": "qr_code",
            "in": "query",
            "description": "QR code of the kit",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully fetched kit details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "kit": {
                          "type": "object",
                          "properties": {
                            "product_name": { "type": "string" },
                            "kit_picture": { "type": "string" },
                            "brand": { "type": "string" },
                            "model_number": { "type": "string" },
                            "batch_number": { "type": "string" },
                            "lot_number": { "type": "string" },
                            "expiry_date": { "type": "string", "format": "date-time" },
                            "kit_found": { "type": "boolean" }
                          }
                        },
                        "relatedProducts": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "kit_id": { "type": "string" },
                              "brand": { "type": "string" },
                              "description": { "type": "string" },
                              "quantity": { "type": "number" },
                              "product_picture": { "type": "string" }
                            }
                          }
                        }
                      }
                    },
                    "message": { "type": "string" },
                    "status": { "type": "number" }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Kit not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "kit": { "type": "null" },
                        "kit_found": { "type": "boolean" }
                      }
                    },
                    "message": { "type": "string" },
                    "status": { "type": "number" }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/add_kit_location": {
      "post": {
        "tags": ["Admin"],
        "summary": "Add a kit location",
        "description": "Endpoint to add a new location for a kit by admin",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "location_name": { "type": "string" },
                  "area": { "type": "string" },
                  "kit_location_pic": { "type": "string", "format": "binary" },
                  "kit_id": { "type": "string" },
                  "location_id": { "type": "string" },
                  "is_moving": { "type": "boolean" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Location added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "status": { "type": "number" }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "number" },
                    "message": { "type": "string" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/add_quick_incident": {
      "post": {
        "tags": ["Admin"],
        "summary": "Add a quick incident",
        "description": "Endpoint to quickly add an incident by an admin",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user_id": { "type": "string" },
                  "incident_date": { "type": "string", "format": "date" },
                  "incident_time": { "type": "string", "format": "time" },
                  "description": { "type": "string" },
                  "category_of_incident": { "type": "string" },
                  "classification": { "type": "string" }
                },
                "required": ["user_id", "incident_date", "incident_time", "description", "category_of_incident", "classification"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Incident added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "incident": {
                      "type": "object",
                      "properties": {
                        "user_id": { "type": "string" },
                        "incident_date": { "type": "string", "format": "date" },
                        "incident_time": { "type": "string", "format": "time" },
                        "description": { "type": "string" },
                        "category_of_incident": { "type": "string" },
                        "classification": { "type": "string" },
                        "account_creation": { "type": "string", "format": "date-time" }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "error": { "type": "string" }
                  }
                }
              }
            }
          }
        }
      }
    },

    "/admin/add_detailed_incident": {
      "post": {
        "tags": ["Admin"],
        "summary": "Add a detailed incident",
        "description": "Endpoint to add a detailed incident with incident pictures",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "user_id": { "type": "string" },
                  "incident_date": { "type": "string", "format": "date" },
                  "incident_time": { "type": "string", "format": "time" },
                  "description": { "type": "string" },
                  "category_of_incident": { "type": "string" },
                  "classification": { "type": "string" },
                  "location_of_incident": { "type": "string" },
                  "area_of_incident": { "type": "string" },
                  "full_name": { "type": "string" },
                  "victim_user_id": { "type": "string" },
                  "incident_pictures": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                },
                "required": ["user_id", "incident_date", "incident_time", "description", "category_of_incident", "classification", "location_of_incident", "area_of_incident", "full_name", "victim_user_id", "incident_pictures"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Incident added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "error": { "type": "string" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/add_location": {
      "post": {
        "tags": ["Admin"],
        "summary": "Add a location",
        "description": "Endpoint to add a location",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "location_name": { "type": "string" },
                  "longitude": { "type": "number" },
                  "latitude": { "type": "number" },
                  "street": { "type": "string" },
                  "city": { "type": "string" },
                  "county": { "type": "string" },
                  "country": { "type": "string" },
                  "zip_code": { "type": "string" },
                  "country_code": { "type": "string" },
                  "contact_number": { "type": "string" },
                  "assigned_admin_id": { "type": "string" },
                  "assigned_approver_id": { "type": "string" }
                },
                "required": ["location_name", "longitude", "latitude", "street", "city", "county", "country", "zip_code", "country_code", "contact_number"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Location added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "location": {
                      "type": "object",
                      "properties": {
                        "location_name": { "type": "string" },
                        "longitude": { "type": "number" },
                        "latitude": { "type": "number" },
                        "street": { "type": "string" },
                        "city": { "type": "string" },
                        "county": { "type": "string" },
                        "country": { "type": "string" },
                        "zip_code": { "type": "string" },
                        "telephone": { "type": "string" },
                        "assigned_admin_id": { "type": "string" },
                        "assigned_approver_id": { "type": "string" },
                        "company_id": { "type": "string" },
                        "_id": { "type": "string" }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "error": { "type": "string" }
                  }
                }
              }
            }
          }
        }
      }
    },

    "/admin/register_user": {
      "post": {
        "tags": ["Admin"],
        "summary": "Register a user",
        "description": "Endpoint to register a new user",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": { "type": "string", "format": "email" },
                  "first_name": { "type": "string" },
                  "last_name": { "type": "string" },
                  "location": { "type": "string" },
                  "contact_number": { "type": "string" },
                  "country_code": { "type": "string" },
                  "employee_id": { "type": "string" },
                  "job_title": { "type": "string" },
                  "assigned_role": { "type": "string" },
                  "permissions": { "type": "string" },
                  "is_firstaid_certified": { "type": "boolean" },
                  "firstaid_certificate_date": { "type": "string", "format": "date" },
                  "firstaid_certificate": { "type": "string", "format": "binary" }
                },
                "required": ["email", "first_name", "last_name", "contact_number", "country_code", "assigned_role", "is_firstaid_certified"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "user_id": { "type": "string" },
                    "status": { "type": "boolean" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "status": { "type": "number" }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "status": { "type": "number" }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "error": { "type": "string" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/fetch_location": {
      "get": {
        "tags": ["Admin"],
        "summary": "Fetch locations for the user's company",
        "description": "Endpoint to fetch locations for the user's company",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Locations found successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "locations": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": { "type": "string" },
                          "location_name": { "type": "string" },
                          "latitude": { "type": "number" },
                          "longitude": { "type": "number" }
                        }
                      }
                    },
                    "status": { "type": "integer" }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User or locations not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string" }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/get_users": {
      "get": {
        "tags": ["Admin"],
        "summary": "Get users",
        "description": "Endpoint to get a list of users associated with the current admin",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Users found successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "Users": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "first_name": { "type": "string" },
                              "last_name": { "type": "string" },
                              "id": { "type": "string" },
                              "assigned_role": { "type": "string" },
                              "company_name": { "type": "string" }
                            }
                          }
                        }
                      }
                    },
                    "message": { "type": "string" },
                    "status": { "type": "number" }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - You are not authorized to view this information"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": { "type": "null" },
                    "status": { "type": "number" },
                    "message": { "type": "string" }
                  }
                }
              }
            }
          }
        }
      }
    },

    "/user/refresh_token": {
      "post": {
        "tags": ["User"],
        "summary": "Refresh User Access Token",
        "description": "Endpoint to refresh the access token of a user using a refresh token",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "refresh_token": { "type": "string" }
                },
                "required": ["refresh_token"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "access_token": { "type": "string" }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/forget_password": {
      "post": {
        "tags": ["User"],
        "summary": "Forget Password",
        "description": "Endpoint to request a password reset for a user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": { "type": "string", "format": "email" }
                },
                "required": ["email"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Email sent for password reset",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "status": { "type": "boolean", "enum": [true] }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "status": { "type": "boolean", "enum": [false] }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Email could not be sent",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "status": { "type": "boolean", "enum": [false] }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/reset_password/{token}": {
      "post": {
        "tags": ["User"],
        "summary": "Reset Password",
        "description": "Endpoint to reset user password using a password reset token",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "Password reset token received via email",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "password": { "type": "string" }
                },
                "required": ["password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "status": { "type": "integer", "example": 200 }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid or expired password reset link",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "status": { "type": "integer", "example": 400 }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/distributor/signup": {
      "post": {
        "tags": ["Distributor"],
        "summary": "Distributor Signup",
        "description": "Endpoint for distributors to sign up",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "distributor_name": { "type": "string" },
                  "street": { "type": "string" },
                  "county": { "type": "string" },
                  "country": { "type": "string" },
                  "email": { "type": "string", "format": "email" },
                  "postal_code": { "type": "string" },
                  "country_code": { "type": "string" },
                  "contact_number": { "type": "string" },
                  "alternate_distributor_name": { "type": "string" },
                  "role": { "type": "string" },
                  "company_logo": { "type": "string", "format": "binary" },
                  "company_white_logo": { "type": "string", "format": "binary" }
                },
                "required": ["distributor_name", "email", "company_logo", "company_white_logo"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Distributor signed up successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "distributor": {
                          "type": "object",
                          "description": "Details of the signed up distributor"
                        },
                        "message": { "type": "string" }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Email is not valid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "number" },
                    "message": { "type": "string" }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": { "type": "null" },
                    "status": { "type": "number" },
                    "message": { "type": "string" }
                  }
                }
              }
            }
          }
        }
      }
    }







  }
}
